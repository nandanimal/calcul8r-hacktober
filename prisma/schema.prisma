// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String   @id @default(uuid())
  auth0UserId String   @unique
  handle      String   @unique
  displayName String
  avatarUrl   String?
  createdAt   DateTime @default(now())

  posts    Post[]
  comments Comment[]
  likes    Like[]
}

model Post {
  id         String   @id @default(uuid())
  authorId   String
  expression String
  result     String
  createdAt  DateTime @default(now())

  author   User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  likes    Like[]
  comments Comment[]

  @@index([authorId, createdAt(sort: Desc)])
  @@index([createdAt(sort: Desc)])
}

model Like {
  id        String   @id @default(uuid())
  postId    String
  userId    String
  createdAt DateTime @default(now())

  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([postId, userId])
  @@index([postId])
  @@index([userId])
}

model Comment {
  id        String   @id @default(uuid())
  postId    String
  authorId  String
  body      String
  createdAt DateTime @default(now())

  post   Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  author User @relation(fields: [authorId], references: [id], onDelete: Cascade)

  @@index([postId, createdAt(sort: Desc)])
  @@index([authorId, createdAt(sort: Desc)])
}
